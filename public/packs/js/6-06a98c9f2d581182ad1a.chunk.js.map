{"version":3,"file":"js/6-06a98c9f2d581182ad1a.chunk.js","sources":["webpack:///./app/javascript/components/authentication/ForgotPassword.tsx","webpack:///./app/javascript/components/forms/ForgotPasswordForm.tsx"],"sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Stack, Typography } from '@mui/material'\nimport AuthWrapper from '../shared/AuthWrapper'\nimport ForgotPasswordForm from '../forms/ForgotPasswordForm'\n\nexport default function Login(): JSX.Element {\n  return (\n    <AuthWrapper>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Stack direction='row' justifyContent='space-between' alignItems='baseline' sx={{ mb: { xs: -0.5, sm: 0.5 } }}>\n            <Typography variant='h5'>Forgot Password</Typography>\n            <Typography component={Link} to='/register' variant='body1' sx={{ textDecoration: 'none' }} color='primary'>\n              Don't have an account?\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={12}>\n          <ForgotPasswordForm />\n        </Grid>\n      </Grid>\n    </AuthWrapper>\n  )\n}\n","import * as React from 'react'\nimport * as Yup from 'yup'\nimport { Formik } from 'formik'\nimport {\n  Button,\n  FormHelperText,\n  Grid,\n  Stack,\n  TextField,\n} from '@mui/material'\n\ninterface Prop {\n  isDemo?: boolean\n}\nexport default function ForgotPasswordForm({ isDemo = false }) {\n  const [checked, setChecked] = React.useState(false)\n\n  const [showPassword, setShowPassword] = React.useState(false)\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault()\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n  }\n\n  return (\n    <>\n      <Formik\n        onSubmit={handleSubmit}\n        initialValues={{\n          email: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n        })}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Stack spacing={1}>\n                  <TextField\n                    id='email'\n                    label='Email'\n                    type='email'\n                    value={values.email}\n                    name='email'\n                    onChange={handleChange}\n                    fullWidth\n                    error={Boolean(touched.email && errors.email)}\n                  />\n                </Stack>\n                {touched.email && errors.email && (\n                  <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                    {/* {errors.email} */}\n                  </FormHelperText>\n                )}\n              </Grid>\n              {errors.submit && (\n                <Grid item xs={12}>\n                  <FormHelperText error>\n                    {/* {errors.submit} */}\n                  </FormHelperText>\n                </Grid>\n              )}\n              <Grid item xs={12}>\n                <Button disableElevation disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                  Request Password change\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        )}\n      </Formik>\n    </>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAKA;;;;A","sourceRoot":""}