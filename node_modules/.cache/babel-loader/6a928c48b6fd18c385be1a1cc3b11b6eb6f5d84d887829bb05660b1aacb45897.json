{"ast":null,"code":"import React__default, { useMemo } from 'react';\nimport { useAuthenticator } from '@aws-amplify/ui-react-core';\nimport { ConfirmSignUp } from '../ConfirmSignUp/ConfirmSignUp.mjs';\nimport { ForceNewPassword } from '../ForceNewPassword/ForceNewPassword.mjs';\nimport { SetupTotp } from '../SetupTotp/SetupTotp.mjs';\nimport '@aws-amplify/ui';\nimport '../../../primitives/TextField/TextField.mjs';\nimport '../../../primitives/Button/Button.mjs';\nimport '../../../primitives/Flex/Flex.mjs';\nimport '../../../primitives/Alert/Alert.mjs';\nimport { SignInSignUpTabs } from '../shared/SignInSignUpTabs.mjs';\nimport { ConfirmVerifyUser } from '../VerifyUser/ConfirmVerifyUser.mjs';\nimport { VerifyUser } from '../VerifyUser/VerifyUser.mjs';\nimport { ConfirmSignIn } from '../ConfirmSignIn/ConfirmSignIn.mjs';\nimport { ConfirmResetPassword } from '../ForgotPassword/ConfirmResetPassword.mjs';\nimport { ForgotPassword } from '../ForgotPassword/ForgotPassword.mjs';\nimport { isSignInOrSignUpRoute } from '../utils.mjs';\nfunction RenderNothing() {\n  // @ts-ignore\n  return null;\n}\nconst getRouteComponent = route => {\n  switch (route) {\n    case 'authenticated':\n    case 'idle':\n    case 'setup':\n    case 'transition':\n      return RenderNothing;\n    case 'confirmSignUp':\n      return ConfirmSignUp;\n    case 'confirmSignIn':\n      return ConfirmSignIn;\n    case 'setupTotp':\n      return SetupTotp;\n    case 'signIn':\n    case 'signUp':\n      return SignInSignUpTabs;\n    case 'forceNewPassword':\n      return ForceNewPassword;\n    case 'forgotPassword':\n      return ForgotPassword;\n    case 'confirmResetPassword':\n      return ConfirmResetPassword;\n    case 'verifyUser':\n      return VerifyUser;\n    case 'confirmVerifyUser':\n      return ConfirmVerifyUser;\n    default:\n      // eslint-disable-next-line no-console\n      console.warn(`Unhandled Authenticator route - please open an issue: ${route}`);\n      return RenderNothing;\n  }\n};\nfunction Router(_ref) {\n  let className = _ref.className,\n    hideSignUp = _ref.hideSignUp,\n    variation = _ref.variation;\n  const _useAuthenticator = useAuthenticator(_ref2 => {\n      let route = _ref2.route;\n      return [route];\n    }),\n    route = _useAuthenticator.route;\n  const RouterChildren = useMemo(() => getRouteComponent(route), [route]);\n  return /*#__PURE__*/React__default.createElement(RouterChildren, {\n    className: className,\n    // @ts-ignore\n    hideSignUp: isSignInOrSignUpRoute(route) ? hideSignUp : undefined,\n    variation: variation\n  });\n}\nexport { Router };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}