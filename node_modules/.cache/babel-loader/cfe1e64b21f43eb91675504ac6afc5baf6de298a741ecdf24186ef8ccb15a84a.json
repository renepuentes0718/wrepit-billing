{"ast":null,"code":"const _excluded = [\"items\", \"indicatorPosition\", \"justifyContent\", \"spacing\"],\n  _excluded2 = [\"value\", \"label\", \"content\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nimport { TabsItem } from './TabsItem.mjs';\nimport { TabList } from './TabsList.mjs';\nimport { TabPanel } from './TabsPanel.mjs';\nimport { TabsContainer } from './TabsContainer.mjs';\nconst TabsPrimitive = (_ref, ref) => {\n  let items = _ref.items,\n    indicatorPosition = _ref.indicatorPosition,\n    justifyContent = _ref.justifyContent,\n    spacing = _ref.spacing,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(TabsContainer, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(TabList, {\n    indicatorPosition: indicatorPosition,\n    justifyContent: justifyContent,\n    spacing: spacing\n  }, items?.map(_ref2 => {\n    let value = _ref2.value,\n      label = _ref2.label,\n      content = _ref2.content,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n    return /*#__PURE__*/React.createElement(TabsItem, _objectSpread(_objectSpread({}, rest), {}, {\n      key: value,\n      value: value\n    }), label);\n  })), items?.map(_ref3 => {\n    let value = _ref3.value,\n      content = _ref3.content,\n      isDisabled = _ref3.isDisabled;\n    return /*#__PURE__*/React.createElement(TabPanel, {\n      key: value,\n      value: value,\n      isDisabled: isDisabled\n    }, content);\n  }));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/tabs)\n */\nconst Tabs = Object.assign(primitiveWithForwardRef(TabsPrimitive), {\n  Item: TabsItem,\n  List: TabList,\n  Panel: TabPanel,\n  Container: TabsContainer\n});\nTabs.displayName = 'Tabs';\nexport { Tabs };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}