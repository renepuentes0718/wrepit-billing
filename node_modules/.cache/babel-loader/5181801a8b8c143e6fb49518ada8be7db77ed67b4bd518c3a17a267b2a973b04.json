{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport { TabsContext } from '../Tabs/TabsContext';\nimport { CompoundComponentContext } from '../useCompound';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Sets up the contexts for the underlying Tab and TabPanel components.\n *\n * @ignore - do not document.\n */\nexport function TabsProvider(props) {\n  const valueProp = props.value,\n    children = props.children;\n  const direction = valueProp.direction,\n    getItemIndex = valueProp.getItemIndex,\n    onSelected = valueProp.onSelected,\n    orientation = valueProp.orientation,\n    registerItem = valueProp.registerItem,\n    registerTabIdLookup = valueProp.registerTabIdLookup,\n    selectionFollowsFocus = valueProp.selectionFollowsFocus,\n    totalSubitemCount = valueProp.totalSubitemCount,\n    value = valueProp.value,\n    getTabId = valueProp.getTabId,\n    getTabPanelId = valueProp.getTabPanelId;\n  const compoundComponentContextValue = React.useMemo(() => ({\n    getItemIndex,\n    registerItem,\n    totalSubitemCount\n  }), [registerItem, getItemIndex, totalSubitemCount]);\n  const tabsContextValue = React.useMemo(() => ({\n    direction,\n    getTabId,\n    getTabPanelId,\n    onSelected,\n    orientation,\n    registerTabIdLookup,\n    selectionFollowsFocus,\n    value\n  }), [direction, getTabId, getTabPanelId, onSelected, orientation, registerTabIdLookup, selectionFollowsFocus, value]);\n  return /*#__PURE__*/_jsx(CompoundComponentContext.Provider, {\n    value: compoundComponentContextValue,\n    children: /*#__PURE__*/_jsx(TabsContext.Provider, {\n      value: tabsContextValue,\n      children: children\n    })\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}