{"ast":null,"code":"import { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nfunction getOriginIndex(from, total) {\n  if (from === \"first\") {\n    return 0;\n  } else {\n    const lastIndex = total - 1;\n    return from === \"last\" ? lastIndex : lastIndex / 2;\n  }\n}\nfunction stagger() {\n  let duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.1;\n  let _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    _ref$startDelay = _ref.startDelay,\n    startDelay = _ref$startDelay === void 0 ? 0 : _ref$startDelay,\n    _ref$from = _ref.from,\n    from = _ref$from === void 0 ? 0 : _ref$from,\n    ease = _ref.ease;\n  return (i, total) => {\n    const fromIndex = typeof from === \"number\" ? from : getOriginIndex(from, total);\n    const distance = Math.abs(fromIndex - i);\n    let delay = duration * distance;\n    if (ease) {\n      const maxDelay = total * duration;\n      const easingFunction = easingDefinitionToFunction(ease);\n      delay = easingFunction(delay / maxDelay) * maxDelay;\n    }\n    return startDelay + delay;\n  };\n}\nexport { getOriginIndex, stagger };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}