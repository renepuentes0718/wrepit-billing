{"ast":null,"code":"const _excluded = [\"autoComplete\", \"className\", \"defaultDialCode\", \"dialCodeLabel\", \"dialCodeList\", \"dialCodeName\", \"dialCodeRef\", \"hasError\", \"isDisabled\", \"isReadOnly\", \"onDialCodeChange\", \"onInput\", \"size\", \"variation\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { classNames, ComponentClassName } from '@aws-amplify/ui';\nimport { DialCodeSelect } from './DialCodeSelect.mjs';\nimport { ComponentText } from '../shared/constants.mjs';\nimport { TextField } from '../TextField/TextField.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst PhoneNumberFieldPrimitive = (_ref, ref) => {\n  let _ref$autoComplete = _ref.autoComplete,\n    autoComplete = _ref$autoComplete === void 0 ? 'tel-national' : _ref$autoComplete,\n    className = _ref.className,\n    defaultDialCode = _ref.defaultDialCode,\n    _ref$dialCodeLabel = _ref.dialCodeLabel,\n    dialCodeLabel = _ref$dialCodeLabel === void 0 ? ComponentText.PhoneNumberField.countryCodeLabel : _ref$dialCodeLabel,\n    dialCodeList = _ref.dialCodeList,\n    dialCodeName = _ref.dialCodeName,\n    dialCodeRef = _ref.dialCodeRef,\n    hasError = _ref.hasError,\n    isDisabled = _ref.isDisabled,\n    isReadOnly = _ref.isReadOnly,\n    onDialCodeChange = _ref.onDialCodeChange,\n    onInput = _ref.onInput,\n    size = _ref.size,\n    variation = _ref.variation,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(TextField, _objectSpread({\n    outerStartComponent: /*#__PURE__*/React.createElement(DialCodeSelect, {\n      defaultValue: defaultDialCode,\n      dialCodeList: dialCodeList,\n      className: className,\n      hasError: hasError,\n      isDisabled: isDisabled,\n      isReadOnly: isReadOnly,\n      label: dialCodeLabel,\n      name: dialCodeName,\n      onChange: onDialCodeChange,\n      ref: dialCodeRef,\n      size: size,\n      variation: variation\n    }),\n    autoComplete: autoComplete,\n    className: classNames(ComponentClassName.PhoneNumberField, className),\n    hasError: hasError,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    onInput: onInput,\n    ref: ref,\n    size: size,\n    type: \"tel\",\n    variation: variation\n  }, rest));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/phonenumberfield)\n */\nconst PhoneNumberField = primitiveWithForwardRef(PhoneNumberFieldPrimitive);\nPhoneNumberField.displayName = 'PhoneNumberField';\nexport { PhoneNumberField };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}