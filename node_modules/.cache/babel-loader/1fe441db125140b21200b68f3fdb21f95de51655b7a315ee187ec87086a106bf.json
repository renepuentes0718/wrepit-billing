{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/project-ges/app/javascript/packs/wrepit.tsx\",\n  _this = this;\nimport React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { RouterProvider } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport createUploadLink from 'apollo-upload-client/createUploadLink.mjs';\nimport router from '../components/routes/Index';\ndocument.addEventListener('DOMContentLoaded', function () {\n  var rootElement = document.getElementById('root');\n  var root = createRoot(rootElement);\n  var client = new ApolloClient({\n    link: createUploadLink({\n      uri: 'http://localhost:5000/graphql'\n    }),\n    cache: new InMemoryCache()\n    // headers: {\n    //   'Content-Type': 'application/json',\n    //   'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n    // },\n  });\n  root.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: client,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StrictMode, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }))));\n});","map":{"version":3,"names":["React","StrictMode","createRoot","RouterProvider","ApolloProvider","ApolloClient","InMemoryCache","createUploadLink","router","document","addEventListener","rootElement","getElementById","root","client","link","uri","cache","render","createElement","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/admin/Desktop/project-ges/app/javascript/packs/wrepit.tsx"],"sourcesContent":["import React, { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { RouterProvider } from 'react-router-dom'\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\"\nimport createUploadLink from 'apollo-upload-client/createUploadLink.mjs'\nimport router from '../components/routes/Index'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const rootElement = document.getElementById('root')\n  const root = createRoot(rootElement)\n\n  const client = new ApolloClient({\n    link: createUploadLink({ uri: 'http://localhost:5000/graphql' }),\n    cache: new InMemoryCache(),\n    // headers: {\n    //   'Content-Type': 'application/json',\n    //   'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n    // },\n  })\n\n  root.render(\n    <ApolloProvider client={client}>\n      <StrictMode>\n        <RouterProvider router={router} />\n      </StrictMode>\n    </ApolloProvider>\n  )\n})\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,EAAEC,YAAY,EAAEC,aAAa,QAAQ,gBAAgB;AAC5E,OAAOC,gBAAgB,MAAM,2CAA2C;AACxE,OAAOC,MAAM,MAAM,4BAA4B;AAE/CC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAClD,IAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC;EACnD,IAAMC,IAAI,GAAGX,UAAU,CAACS,WAAW,CAAC;EAEpC,IAAMG,MAAM,GAAG,IAAIT,YAAY,CAAC;IAC9BU,IAAI,EAAER,gBAAgB,CAAC;MAAES,GAAG,EAAE;IAAgC,CAAC,CAAC;IAChEC,KAAK,EAAE,IAAIX,aAAa,CAAC;IACzB;IACA;IACA;IACA;EACF,CAAC,CAAC;EAEFO,IAAI,CAACK,MAAM,eACTlB,KAAA,CAAAmB,aAAA,CAACf,cAAc;IAACU,MAAM,EAAEA,MAAO;IAAAM,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7B1B,KAAA,CAAAmB,aAAA,CAAClB,UAAU;IAAAmB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACT1B,KAAA,CAAAmB,aAAA,CAAChB,cAAc;IAACK,MAAM,EAAEA,MAAO;IAAAY,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvB,CACE,CAClB,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}