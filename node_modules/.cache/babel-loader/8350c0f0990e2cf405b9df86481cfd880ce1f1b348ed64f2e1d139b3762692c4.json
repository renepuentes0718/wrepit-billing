{"ast":null,"code":"/**\n * Password validator for login pages\n */\n\n// has number\nvar hasNumber = function hasNumber(character) {\n  return new RegExp(/[0-9]/).test(character);\n};\n\n// has mix of small and capitals\nvar hasMixed = function hasMixed(character) {\n  return new RegExp(/[a-z]/).test(character) && new RegExp(/[A-Z]/).test(character);\n};\n\n// has special chars\nvar hasSpecial = function hasSpecial(character) {\n  return new RegExp(/[!#@$%^&*)(+=._-]/).test(character);\n};\n\n// set color based on password strength\nexport var strengthColor = function strengthColor(count) {\n  if (count < 2) return {\n    label: 'Poor',\n    color: 'error.main'\n  };\n  if (count < 3) return {\n    label: 'Weak',\n    color: 'warning.main'\n  };\n  if (count < 4) return {\n    label: 'Normal',\n    color: 'warning.dark'\n  };\n  if (count < 5) return {\n    label: 'Good',\n    color: 'success.main'\n  };\n  if (count < 6) return {\n    label: 'Strong',\n    color: 'success.dark'\n  };\n  return {\n    label: 'Poor',\n    color: 'error.main'\n  };\n};\n\n// password strength indicator\nexport var strengthIndicator = function strengthIndicator(character) {\n  var strengths = 0;\n  if (character.length > 5) strengths += 1;\n  if (character.length > 7) strengths += 1;\n  if (hasNumber(character)) strengths += 1;\n  if (hasSpecial(character)) strengths += 1;\n  if (hasMixed(character)) strengths += 1;\n  return strengths;\n};","map":{"version":3,"names":["hasNumber","character","RegExp","test","hasMixed","hasSpecial","strengthColor","count","label","color","strengthIndicator","strengths","length"],"sources":["/Users/admin/Desktop/project-ges/app/javascript/components/utils/passwordStrength.ts"],"sourcesContent":["import { Strength } from \"../interface\"\n/**\n * Password validator for login pages\n */\n\n// has number\nconst hasNumber = (character: string): boolean => new RegExp(/[0-9]/).test(character)\n\n// has mix of small and capitals\nconst hasMixed = (character: string): boolean => new RegExp(/[a-z]/).test(character) && new RegExp(/[A-Z]/).test(character)\n\n// has special chars\nconst hasSpecial = (character: string): boolean => new RegExp(/[!#@$%^&*)(+=._-]/).test(character)\n\n// set color based on password strength\nexport const strengthColor = (count: number): Strength => {\n  if (count < 2) return { label: 'Poor', color: 'error.main' }\n  if (count < 3) return { label: 'Weak', color: 'warning.main' }\n  if (count < 4) return { label: 'Normal', color: 'warning.dark' }\n  if (count < 5) return { label: 'Good', color: 'success.main' }\n  if (count < 6) return { label: 'Strong', color: 'success.dark' }\n  return { label: 'Poor', color: 'error.main' }\n}\n\n// password strength indicator\nexport const strengthIndicator = (character: string): number => {\n  let strengths = 0\n  if (character.length > 5) strengths += 1\n  if (character.length > 7) strengths += 1\n  if (hasNumber(character)) strengths += 1\n  if (hasSpecial(character)) strengths += 1\n  if (hasMixed(character)) strengths += 1\n  return strengths\n}\n"],"mappings":"AACA;AACA;AACA;;AAEA;AACA,IAAMA,SAAS,GAAG,SAAZA,SAASA,CAAIC,SAAiB;EAAA,OAAc,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,SAAS,CAAC;AAAA;;AAErF;AACA,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAIH,SAAiB;EAAA,OAAc,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,SAAS,CAAC,IAAI,IAAIC,MAAM,CAAC,OAAO,CAAC,CAACC,IAAI,CAACF,SAAS,CAAC;AAAA;;AAE3H;AACA,IAAMI,UAAU,GAAG,SAAbA,UAAUA,CAAIJ,SAAiB;EAAA,OAAc,IAAIC,MAAM,CAAC,mBAAmB,CAAC,CAACC,IAAI,CAACF,SAAS,CAAC;AAAA;;AAElG;AACA,OAAO,IAAMK,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,KAAa,EAAe;EACxD,IAAIA,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAa,CAAC;EAC5D,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAe,CAAC;EAC9D,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAe,CAAC;EAChE,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAe,CAAC;EAC9D,IAAIF,KAAK,GAAG,CAAC,EAAE,OAAO;IAAEC,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAe,CAAC;EAChE,OAAO;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAa,CAAC;AAC/C,CAAC;;AAED;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIT,SAAiB,EAAa;EAC9D,IAAIU,SAAS,GAAG,CAAC;EACjB,IAAIV,SAAS,CAACW,MAAM,GAAG,CAAC,EAAED,SAAS,IAAI,CAAC;EACxC,IAAIV,SAAS,CAACW,MAAM,GAAG,CAAC,EAAED,SAAS,IAAI,CAAC;EACxC,IAAIX,SAAS,CAACC,SAAS,CAAC,EAAEU,SAAS,IAAI,CAAC;EACxC,IAAIN,UAAU,CAACJ,SAAS,CAAC,EAAEU,SAAS,IAAI,CAAC;EACzC,IAAIP,QAAQ,CAACH,SAAS,CAAC,EAAEU,SAAS,IAAI,CAAC;EACvC,OAAOA,SAAS;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}