{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/project-ges/app/javascript/packs/wrepit.tsx\",\n  _this = this;\nimport React, { StrictMode } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { RouterProvider } from 'react-router-dom';\nimport { ApolloProvider } from \"@apollo/client\";\nimport createUploadLink from 'apollo-upload-client/createUploadLink.mjs';\nimport router from '../components/routes/Index';\ndocument.addEventListener('DOMContentLoaded', function () {\n  var rootElement = document.getElementById('root');\n  var root = createRoot(rootElement);\n\n  // const client = new ApolloClient({\n  //   link: createUploadLink({ uri: 'http://localhost:5000/graphql' }),\n  //   cache: new InMemoryCache(),\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  //     'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n  //   },\n  // })\n  var httpLink = createUploadLink({\n    uri: \"http://localhost:5000/graphql\" // Replace with your GraphQL endpoint\n  });\n  root.render( /*#__PURE__*/React.createElement(ApolloProvider, {\n    client: httpLink,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StrictMode, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RouterProvider, {\n    router: router,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }))));\n});","map":{"version":3,"names":["React","StrictMode","createRoot","RouterProvider","ApolloProvider","createUploadLink","router","document","addEventListener","rootElement","getElementById","root","httpLink","uri","render","createElement","client","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/admin/Desktop/project-ges/app/javascript/packs/wrepit.tsx"],"sourcesContent":["import React, { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { RouterProvider } from 'react-router-dom'\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\"\nimport createUploadLink from 'apollo-upload-client/createUploadLink.mjs'\nimport router from '../components/routes/Index'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const rootElement = document.getElementById('root')\n  const root = createRoot(rootElement)\n\n  // const client = new ApolloClient({\n  //   link: createUploadLink({ uri: 'http://localhost:5000/graphql' }),\n  //   cache: new InMemoryCache(),\n  //   headers: {\n  //     'Content-Type': 'application/json',\n  //     'X-CSRF-Token': document.querySelector('meta[name=\"csrf-token\"]').getAttribute('content')\n  //   },\n  // })\n  const httpLink = createUploadLink({\n    uri: \"http://localhost:5000/graphql\", // Replace with your GraphQL endpoint\n  })\n\n  root.render(\n    <ApolloProvider client={httpLink}>\n      <StrictMode>\n        <RouterProvider router={router} />\n      </StrictMode>\n    </ApolloProvider>\n  )\n})\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,cAAc,QAAqC,gBAAgB;AAC5E,OAAOC,gBAAgB,MAAM,2CAA2C;AACxE,OAAOC,MAAM,MAAM,4BAA4B;AAE/CC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAM;EAClD,IAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC;EACnD,IAAMC,IAAI,GAAGT,UAAU,CAACO,WAAW,CAAC;;EAEpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAMG,QAAQ,GAAGP,gBAAgB,CAAC;IAChCQ,GAAG,EAAE,+BAA+B,CAAE;EACxC,CAAC,CAAC;EAEFF,IAAI,CAACG,MAAM,eACTd,KAAA,CAAAe,aAAA,CAACX,cAAc;IAACY,MAAM,EAAEJ,QAAS;IAAAK,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BvB,KAAA,CAAAe,aAAA,CAACd,UAAU;IAAAgB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACTvB,KAAA,CAAAe,aAAA,CAACZ,cAAc;IAACG,MAAM,EAAEA,MAAO;IAAAW,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACvB,CACE,CAClB,CAAC;AACH,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}