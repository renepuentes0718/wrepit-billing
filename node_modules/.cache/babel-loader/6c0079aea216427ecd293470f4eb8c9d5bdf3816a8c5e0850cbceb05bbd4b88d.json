{"ast":null,"code":"/**\n * @internal May be removed in a future version\n * Maps from component style props to React `style` props\n * Note: Primarily needed to map from component style props that don't match CSS Properties directly\n * such as wrap => flexWrap and direction => flexDirection\n */\nconst ComponentPropsToStylePropsMap = {\n  alignContent: 'alignContent',\n  alignItems: 'alignItems',\n  alignSelf: 'alignSelf',\n  area: 'gridArea',\n  aspectRatio: 'aspectRatio',\n  autoColumns: 'gridAutoColumns',\n  autoFlow: 'gridAutoFlow',\n  autoRows: 'gridAutoRows',\n  backgroundColor: 'backgroundColor',\n  backgroundImage: 'backgroundImage',\n  basis: 'flexBasis',\n  border: 'border',\n  borderRadius: 'borderRadius',\n  borderColor: 'borderColor',\n  borderWidth: 'borderWidth',\n  borderStyle: 'borderStyle',\n  bottom: 'bottom',\n  boxShadow: 'boxShadow',\n  color: 'color',\n  column: 'gridColumn',\n  columnEnd: 'gridColumnEnd',\n  columnGap: 'columnGap',\n  columnSpan: 'gridColumn',\n  columnStart: 'gridColumnStart',\n  direction: 'flexDirection',\n  display: 'display',\n  flex: 'flex',\n  fontFamily: 'fontFamily',\n  fontSize: 'fontSize',\n  fontStyle: 'fontStyle',\n  fontWeight: 'fontWeight',\n  gap: 'gap',\n  grow: 'flexGrow',\n  height: 'height',\n  justifyContent: 'justifyContent',\n  left: 'left',\n  letterSpacing: 'letterSpacing',\n  lineHeight: 'lineHeight',\n  margin: 'margin',\n  marginBlock: 'marginBlock',\n  marginBlockEnd: 'marginBlockEnd',\n  marginBlockStart: 'marginBlockStart',\n  marginBottom: 'marginBlockEnd',\n  marginInline: 'marginInline',\n  marginInlineEnd: 'marginInlineEnd',\n  marginInlineStart: 'marginInlineStart',\n  marginLeft: 'marginInlineStart',\n  marginRight: 'marginInlineEnd',\n  marginTop: 'marginBlockStart',\n  maxHeight: 'maxHeight',\n  maxWidth: 'maxWidth',\n  minHeight: 'minHeight',\n  minWidth: 'minWidth',\n  objectFit: 'objectFit',\n  objectPosition: 'objectPosition',\n  opacity: 'opacity',\n  order: 'order',\n  overflow: 'overflow',\n  padding: 'padding',\n  paddingBlock: 'paddingBlock',\n  paddingBlockEnd: 'paddingBlockEnd',\n  paddingBlockStart: 'paddingBlockStart',\n  paddingBottom: 'paddingBlockEnd',\n  paddingInline: 'paddingInline',\n  paddingInlineEnd: 'paddingInlineEnd',\n  paddingInlineStart: 'paddingInlineStart',\n  paddingLeft: 'paddingInlineStart',\n  paddingRight: 'paddingInlineEnd',\n  paddingTop: 'paddingBlockStart',\n  position: 'position',\n  resize: 'resize',\n  right: 'right',\n  row: 'gridRow',\n  rowEnd: 'gridRowEnd',\n  rowGap: 'rowGap',\n  rowSpan: 'gridRow',\n  rowStart: 'gridRowStart',\n  shrink: 'flexShrink',\n  templateAreas: 'gridTemplateAreas',\n  templateColumns: 'gridTemplateColumns',\n  templateRows: 'gridTemplateRows',\n  textAlign: 'textAlign',\n  textDecoration: 'textDecoration',\n  textTransform: 'textTransform',\n  top: 'top',\n  transform: 'transform',\n  transformOrigin: 'transformOrigin',\n  width: 'width',\n  whiteSpace: 'whiteSpace',\n  wrap: 'flexWrap'\n};\n/**\n * @internal May be removed in a future version\n */\nconst ComponentPropsToStylePropsMapKeys = Object.keys(ComponentPropsToStylePropsMap);\nexport { ComponentPropsToStylePropsMap, ComponentPropsToStylePropsMapKeys };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}