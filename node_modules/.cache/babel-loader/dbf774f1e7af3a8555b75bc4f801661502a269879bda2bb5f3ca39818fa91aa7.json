{"ast":null,"code":"import { useRef, useContext, useEffect } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\nfunction useAnimationFrame(callback) {\n  const initialTimestamp = useRef(0);\n  const _useContext = useContext(MotionConfigContext),\n    isStatic = _useContext.isStatic;\n  useEffect(() => {\n    if (isStatic) return;\n    const provideTimeSinceStart = _ref => {\n      let timestamp = _ref.timestamp,\n        delta = _ref.delta;\n      if (!initialTimestamp.current) initialTimestamp.current = timestamp;\n      callback(timestamp - initialTimestamp.current, delta);\n    };\n    frame.update(provideTimeSinceStart, true);\n    return () => cancelFrame(provideTimeSinceStart);\n  }, [callback]);\n}\nexport { useAnimationFrame };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}