{"ast":null,"code":"const _excluded = [\"className\", \"defaultValue\", \"descriptiveText\", \"errorMessage\", \"hasError\", \"id\", \"inputStyles\", \"isDisabled\", \"isReadOnly\", \"isRequired\", \"increaseButtonLabel\", \"decreaseButtonLabel\", \"label\", \"labelHidden\", \"onStepChange\", \"size\", \"testId\", \"value\", \"variation\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\nimport { useStepper } from './useStepper.mjs';\nimport '../Field/FieldClearButton.mjs';\nimport { FieldDescription } from '../Field/FieldDescription.mjs';\nimport { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\nimport '../Field/Field.mjs';\nimport { FieldGroup } from '../FieldGroup/FieldGroup.mjs';\nimport '../FieldGroupIcon/FieldGroupIcon.mjs';\nimport { FieldGroupIconButton } from '../FieldGroupIcon/FieldGroupIconButton.mjs';\nimport { Flex } from '../Flex/Flex.mjs';\nimport '../Icon/Icon.mjs';\nimport '../Icon/context/IconsContext.mjs';\nimport { useIcons } from '../Icon/context/useIcons.mjs';\nimport { IconAdd } from '../Icon/icons/IconAdd.mjs';\nimport '../View/View.mjs';\nimport { IconRemove } from '../Icon/icons/IconRemove.mjs';\nimport { Input } from '../Input/Input.mjs';\nimport { Label } from '../Label/Label.mjs';\nimport { ComponentText } from '../shared/constants.mjs';\nimport { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\nimport { useStableId } from '../utils/useStableId.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst DECREASE_ICON = 'decrease-icon';\nconst INCREASE_ICON = 'increase-icon';\nconst StepperFieldPrimitive = (props, ref) => {\n  const className = props.className,\n    defaultValue = props.defaultValue,\n    descriptiveText = props.descriptiveText,\n    errorMessage = props.errorMessage,\n    _props$hasError = props.hasError,\n    hasError = _props$hasError === void 0 ? false : _props$hasError,\n    id = props.id,\n    inputStyles = props.inputStyles,\n    isDisabled = props.isDisabled,\n    isReadOnly = props.isReadOnly,\n    isRequired = props.isRequired,\n    _props$increaseButton = props.increaseButtonLabel,\n    increaseButtonLabel = _props$increaseButton === void 0 ? ComponentText.StepperField.increaseButtonLabel : _props$increaseButton,\n    _props$decreaseButton = props.decreaseButtonLabel,\n    decreaseButtonLabel = _props$decreaseButton === void 0 ? ComponentText.StepperField.decreaseButtonLabel : _props$decreaseButton,\n    label = props.label,\n    _props$labelHidden = props.labelHidden,\n    labelHidden = _props$labelHidden === void 0 ? false : _props$labelHidden,\n    onStepChange = props.onStepChange,\n    size = props.size,\n    testId = props.testId,\n    controlledValue = props.value,\n    variation = props.variation,\n    _rest = _objectWithoutProperties(props, _excluded);\n  const fieldId = useStableId(id);\n  const descriptionId = useStableId();\n  const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n  const _splitPrimitiveProps = splitPrimitiveProps(_rest),\n    styleProps = _splitPrimitiveProps.styleProps,\n    rest = _splitPrimitiveProps.rest;\n  const icons = useIcons('stepperField');\n  const _useStepper = useStepper(_objectSpread(_objectSpread({}, props), {}, {\n      defaultValue,\n      onStepChange\n    })),\n    step = _useStepper.step,\n    value = _useStepper.value,\n    inputValue = _useStepper.inputValue,\n    handleDecrease = _useStepper.handleDecrease,\n    handleIncrease = _useStepper.handleIncrease,\n    handleOnBlur = _useStepper.handleOnBlur,\n    handleOnChange = _useStepper.handleOnChange,\n    handleOnWheel = _useStepper.handleOnWheel,\n    setInputValue = _useStepper.setInputValue,\n    shouldDisableDecreaseButton = _useStepper.shouldDisableDecreaseButton,\n    shouldDisableIncreaseButton = _useStepper.shouldDisableIncreaseButton;\n  React.useEffect(() => {\n    const isControlled = controlledValue !== undefined;\n    if (isControlled) {\n      setInputValue(controlledValue);\n    }\n  }, [controlledValue, setInputValue]);\n  return /*#__PURE__*/React.createElement(Flex, _objectSpread({\n    className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.StepperField, className),\n    testId: testId\n  }, styleProps), /*#__PURE__*/React.createElement(Label, {\n    htmlFor: fieldId,\n    visuallyHidden: labelHidden\n  }, label), /*#__PURE__*/React.createElement(FieldDescription, {\n    id: descriptionId,\n    labelHidden: labelHidden,\n    descriptiveText: descriptiveText\n  }), /*#__PURE__*/React.createElement(FieldGroup, {\n    outerStartComponent: /*#__PURE__*/React.createElement(FieldGroupIconButton, {\n      \"aria-controls\": fieldId,\n      ariaLabel: `${decreaseButtonLabel} ${value - step}`,\n      className: classNames(ComponentClassName.StepperFieldButtonDecrease, classNameModifier(ComponentClassName.StepperFieldButtonDecrease, variation), classNameModifierByFlag(ComponentClassName.StepperFieldButtonDecrease, 'disabled', shouldDisableDecreaseButton)),\n      \"data-invalid\": hasError,\n      isDisabled: shouldDisableDecreaseButton,\n      onClick: handleDecrease,\n      size: size\n    }, icons?.remove ?? /*#__PURE__*/React.createElement(IconRemove, {\n      \"data-testid\": DECREASE_ICON\n    })),\n    outerEndComponent: /*#__PURE__*/React.createElement(FieldGroupIconButton, {\n      \"aria-controls\": fieldId,\n      ariaLabel: `${increaseButtonLabel} ${value + step}`,\n      className: classNames(ComponentClassName.StepperFieldButtonIncrease, classNameModifier(ComponentClassName.StepperFieldButtonIncrease, variation), classNameModifierByFlag(ComponentClassName.StepperFieldButtonIncrease, 'disabled', shouldDisableIncreaseButton)),\n      \"data-invalid\": hasError,\n      isDisabled: shouldDisableIncreaseButton,\n      onClick: handleIncrease,\n      size: size\n    }, icons?.add ?? /*#__PURE__*/React.createElement(IconAdd, {\n      \"data-testid\": INCREASE_ICON\n    }))\n  }, /*#__PURE__*/React.createElement(Input, _objectSpread(_objectSpread({\n    \"aria-describedby\": ariaDescribedBy,\n    className: ComponentClassName.StepperFieldInput,\n    hasError: hasError,\n    id: fieldId,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    onBlur: handleOnBlur,\n    onChange: handleOnChange,\n    onWheel: handleOnWheel,\n    ref: ref,\n    size: size,\n    variation: variation,\n    type: \"number\",\n    value: inputValue\n  }, inputStyles), rest))), /*#__PURE__*/React.createElement(FieldErrorMessage, {\n    hasError: hasError,\n    errorMessage: errorMessage\n  }));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/stepperfield)\n */\nconst StepperField = primitiveWithForwardRef(StepperFieldPrimitive);\nStepperField.displayName = 'StepperField';\nexport { DECREASE_ICON, INCREASE_ICON, StepperField };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}