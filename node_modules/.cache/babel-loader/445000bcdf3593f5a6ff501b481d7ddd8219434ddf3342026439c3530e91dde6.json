{"ast":null,"code":"const _excluded = [\"className\", \"filledColor\", \"emptyColor\", \"size\", \"variation\", \"isDeterminate\", \"isPercentageTextHidden\", \"percentage\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\nimport { View } from '../View/View.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst LINEAR_EMPTY = 'linear-empty';\nconst LINEAR_FILLED = 'linear-filled';\nconst CIRCULAR_EMPTY = 'circular-empty';\nconst CIRCULAR_FILLED = 'circular-filled';\n// radius + strokeWidth = 50\nconst CIRCULAR_STROKE_WIDTH = 8;\nconst RADIUS = 42;\n// circumference = 2 * r * PI  (r = 42)\nconst CIRCUMFERENCE = 2 * RADIUS * Math.PI;\nconst LoaderPrimitive = (_ref, ref) => {\n  let className = _ref.className,\n    filledColor = _ref.filledColor,\n    emptyColor = _ref.emptyColor,\n    size = _ref.size,\n    variation = _ref.variation,\n    _ref$isDeterminate = _ref.isDeterminate,\n    isDeterminate = _ref$isDeterminate === void 0 ? false : _ref$isDeterminate,\n    _ref$isPercentageText = _ref.isPercentageTextHidden,\n    isPercentageTextHidden = _ref$isPercentageText === void 0 ? false : _ref$isPercentageText,\n    _ref$percentage = _ref.percentage,\n    percentage = _ref$percentage === void 0 ? 0 : _ref$percentage,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  percentage = Math.min(percentage, 100);\n  percentage = Math.max(percentage, 0);\n  const percent = `${percentage}%`;\n  const componentClasses = classNames(ComponentClassName.Loader, classNameModifier(ComponentClassName.Loader, size), classNameModifier(ComponentClassName.Loader, variation), classNameModifierByFlag(ComponentClassName.Loader, 'determinate', isDeterminate), className);\n  const linearLoader = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"0\",\n    x2: \"100%\",\n    y1: \"50%\",\n    y2: \"50%\",\n    style: {\n      stroke: String(emptyColor)\n    },\n    \"data-testid\": LINEAR_EMPTY\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"0\",\n    x2: isDeterminate ? percent : '100%',\n    y1: \"50%\",\n    y2: \"50%\",\n    style: {\n      // To get rid of the visible stroke linecap when percentage is 0\n      stroke: isDeterminate && percentage === 0 ? 'none' : filledColor ? String(filledColor) : undefined\n    },\n    \"data-testid\": LINEAR_FILLED\n  }), isDeterminate ? ( /*#__PURE__*/React.createElement(\"text\", {\n    \"aria-live\": \"polite\",\n    className: classNames(ComponentClassName.LoaderLabel, isPercentageTextHidden ? ComponentClassName.VisuallyHidden : null),\n    // -1% offset makes the text position look nicest\n    x: `${-1 + percentage}%`,\n    y: \"200%\"\n  }, percent)) : null);\n  // r + stroke-width should add up to 50% to avoid overflow\n  const circularLoader = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"50%\",\n    cy: \"50%\",\n    r: `${RADIUS}%`,\n    strokeWidth: `${CIRCULAR_STROKE_WIDTH}%`,\n    style: {\n      stroke: String(emptyColor)\n    },\n    \"data-testid\": CIRCULAR_EMPTY\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"50%\",\n    cy: \"50%\",\n    r: `${RADIUS}%`,\n    strokeWidth: `${CIRCULAR_STROKE_WIDTH}%`,\n    style: {\n      stroke: String(filledColor),\n      strokeDasharray: isDeterminate ? `${CIRCUMFERENCE}% ${CIRCUMFERENCE}%` : undefined,\n      strokeDashoffset: isDeterminate ? `${CIRCUMFERENCE - CIRCUMFERENCE * percentage / 100}%` : undefined\n    },\n    \"data-testid\": CIRCULAR_FILLED\n  }), isDeterminate ? ( /*#__PURE__*/React.createElement(\"text\", {\n    \"aria-live\": \"polite\",\n    className: classNames(ComponentClassName.LoaderLabel, isPercentageTextHidden ? ComponentClassName.VisuallyHidden : null),\n    // this x and y make text position look nicest\n    x: \"130%\",\n    y: \"80%\"\n  }, percent)) : null);\n  return /*#__PURE__*/React.createElement(View, _objectSpread({\n    as: \"svg\",\n    className: componentClasses,\n    ref: ref,\n    role: \"img\"\n  }, rest), variation === 'linear' ? linearLoader : circularLoader);\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/loader)\n */\nconst Loader = primitiveWithForwardRef(LoaderPrimitive);\nLoader.displayName = 'Loader';\nexport { CIRCULAR_EMPTY, CIRCULAR_FILLED, CIRCULAR_STROKE_WIDTH, CIRCUMFERENCE, LINEAR_EMPTY, LINEAR_FILLED, Loader, RADIUS };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}