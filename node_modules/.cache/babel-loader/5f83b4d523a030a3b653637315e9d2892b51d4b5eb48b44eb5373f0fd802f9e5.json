{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/project-ges/app/javascript/components/profile/EditProfile.tsx\",\n  _templateObject;\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\nimport React, { useState } from 'react';\nimport EditUserForm from '../forms/EditUserForm';\nimport { Formik } from 'formik';\nimport { gql, useMutation } from '@apollo/client';\nimport Banner from '../shared/Banner';\nvar initial = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  phone: '',\n  passwordConfirmation: ''\n};\nvar UPDATE_USER = gql(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  mutation UpdateUser(\\n    $email: String,\\n    $password: String,\\n    $phone: String,\\n    $firstName: String,\\n    $lastName: String,\\n    $image: String\\n  ) {\\n    updateUser(\\n      input: {\\n        email: $email,\\n        password: $password,\\n        phone: $phone,\\n        lastName: $lastName,\\n        firstName: $firstName,\\n        image: $image\\n      }\\n    ){\\n      email,\\n      password,\\n      phone,\\n      lastName,\\n      firstName,\\n      imageUrl\\n    }\\n  }\\n\"])));\nexport default function EditProfile(_ref) {\n  var user = _ref.user;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    message = _useState2[0],\n    setMessage = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    severity = _useState4[0],\n    setSeverity = _useState4[1];\n  var _useMutation = useMutation(UPDATE_USER, {\n      onCompleted: function onCompleted(data) {\n        if (!!data) {\n          setSeverity('success');\n          setMessage('Account was created successfully, a confirmation link was sent to your email');\n        }\n      },\n      onError: function onError() {\n        setSeverity('error');\n        setMessage('Sorry, account creation was unsuccessful');\n      }\n    }),\n    _useMutation2 = _slicedToArray(_useMutation, 2),\n    mutate = _useMutation2[0],\n    loading = _useMutation2[1].loading;\n  var handleSubmit = function handleSubmit(event) {\n    console.log(\"the more the whole world in his hands\", event);\n    mutate({\n      variables: {\n        firstName: event.firstName,\n        lastName: event.lastName,\n        image: event.imageUrl,\n        email: event.email,\n        phone: event.phone,\n        password: event.password\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, message && /*#__PURE__*/React.createElement(Banner, {\n    severity: severity,\n    message: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Formik, {\n    enableReinitialize: true,\n    onSubmit: handleSubmit,\n    initialValues: initial\n    // validationSchema={SignUpSchema}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(EditUserForm, {\n    initialValues: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","EditUserForm","Formik","gql","useMutation","Banner","initial","firstName","lastName","email","password","phone","passwordConfirmation","UPDATE_USER","_templateObject","_taggedTemplateLiteral","EditProfile","_ref","user","_useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","severity","setSeverity","_useMutation","onCompleted","data","onError","_useMutation2","mutate","loading","handleSubmit","event","console","log","variables","image","imageUrl","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","enableReinitialize","onSubmit","initialValues"],"sources":["/Users/admin/Desktop/project-ges/app/javascript/components/profile/EditProfile.tsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { User } from '../interface/index'\nimport EditUserForm from '../forms/EditUserForm'\nimport { SignUpSchema } from '../schema'\nimport { Formik } from 'formik'\nimport { gql, useMutation } from '@apollo/client'\nimport Banner from '../shared/Banner'\n\ninterface Props {\n  user: User\n  showAuth: boolean\n}\n\nconst initial = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  phone: '',\n  passwordConfirmation: ''\n}\n\nconst UPDATE_USER = gql`\n  mutation UpdateUser(\n    $email: String,\n    $password: String,\n    $phone: String,\n    $firstName: String,\n    $lastName: String,\n    $image: String\n  ) {\n    updateUser(\n      input: {\n        email: $email,\n        password: $password,\n        phone: $phone,\n        lastName: $lastName,\n        firstName: $firstName,\n        image: $image\n      }\n    ){\n      email,\n      password,\n      phone,\n      lastName,\n      firstName,\n      imageUrl\n    }\n  }\n`;\n\nexport default function EditProfile({ user }): JSX.Element {\n  const [message, setMessage] = useState('')\n  const [severity, setSeverity] = useState(null)\n  const [mutate, { loading }] = useMutation(UPDATE_USER, {\n    onCompleted: (data) => {\n      if (!!data) {\n        setSeverity('success')\n        setMessage('Account was created successfully, a confirmation link was sent to your email')\n      }\n    },\n    onError: () => {\n      setSeverity('error')\n      setMessage('Sorry, account creation was unsuccessful')\n    }\n  })\n\n  const handleSubmit = (event) => {\n    console.log(\"the more the whole world in his hands\", event)\n    mutate({\n      variables: {\n        firstName: event.firstName,\n        lastName: event.lastName,\n        image: event.imageUrl,\n        email: event.email,\n        phone: event.phone,\n        password: event.password,\n      }\n    })\n  }\n  return (\n    <>\n      {message && <Banner severity={severity} message={message} />}\n      <Formik\n        enableReinitialize\n        onSubmit={handleSubmit}\n        initialValues={initial}\n      // validationSchema={SignUpSchema}\n      >\n        <EditUserForm initialValues={user} />\n      </Formik>\n    </>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}