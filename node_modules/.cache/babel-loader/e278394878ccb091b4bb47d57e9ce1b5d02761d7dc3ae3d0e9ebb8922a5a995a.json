{"ast":null,"code":"const _excluded = [\"fieldType\", \"passwordIsHiddenLabel\", \"passwordIsShownLabel\", \"showPasswordButtonLabel\", \"size\", \"hasError\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifierByFlag } from '@aws-amplify/ui';\nimport { Button } from '../Button/Button.mjs';\nimport { VisuallyHidden } from '../VisuallyHidden/VisuallyHidden.mjs';\nimport { ComponentText } from '../shared/constants.mjs';\nimport '../Icon/Icon.mjs';\nimport '../Icon/context/IconsContext.mjs';\nimport { useIcons } from '../Icon/context/useIcons.mjs';\nimport '../View/View.mjs';\nimport { IconVisibilityOff } from '../Icon/icons/IconVisibilityOff.mjs';\nimport { IconVisibility } from '../Icon/icons/IconVisibility.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst _ComponentText$Passwo = ComponentText.PasswordField,\n  passwordIsHidden = _ComponentText$Passwo.passwordIsHidden,\n  passwordIsShown = _ComponentText$Passwo.passwordIsShown,\n  showPassword = _ComponentText$Passwo.showPassword;\nconst ShowPasswordButtonPrimitive = (_ref, ref) => {\n  let fieldType = _ref.fieldType,\n    _ref$passwordIsHidden = _ref.passwordIsHiddenLabel,\n    passwordIsHiddenLabel = _ref$passwordIsHidden === void 0 ? passwordIsHidden : _ref$passwordIsHidden,\n    _ref$passwordIsShownL = _ref.passwordIsShownLabel,\n    passwordIsShownLabel = _ref$passwordIsShownL === void 0 ? passwordIsShown : _ref$passwordIsShownL,\n    _ref$showPasswordButt = _ref.showPasswordButtonLabel,\n    showPasswordButtonLabel = _ref$showPasswordButt === void 0 ? showPassword : _ref$showPasswordButt,\n    size = _ref.size,\n    hasError = _ref.hasError,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const icons = useIcons('passwordField');\n  const showPasswordButtonClass = classNames(ComponentClassName.FieldShowPassword, classNameModifierByFlag(ComponentClassName.FieldShowPassword, 'error', hasError));\n  const icon = fieldType === 'password' ? icons?.visibility ?? /*#__PURE__*/React.createElement(IconVisibility, {\n    \"aria-hidden\": \"true\"\n  }) : icons?.visibilityOff ?? /*#__PURE__*/React.createElement(IconVisibilityOff, {\n    \"aria-hidden\": \"true\"\n  });\n  return /*#__PURE__*/React.createElement(Button, _objectSpread({\n    \"aria-checked\": fieldType !== 'password',\n    ariaLabel: showPasswordButtonLabel,\n    className: showPasswordButtonClass,\n    colorTheme: hasError ? 'error' : undefined,\n    ref: ref,\n    role: \"switch\",\n    size: size\n  }, rest), /*#__PURE__*/React.createElement(VisuallyHidden, {\n    \"aria-live\": \"polite\"\n  }, fieldType === 'password' ? passwordIsHiddenLabel : passwordIsShownLabel), icon);\n};\nconst ShowPasswordButton = primitiveWithForwardRef(ShowPasswordButtonPrimitive);\nShowPasswordButton.displayName = 'ShowPasswordButton';\nexport { ShowPasswordButton };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}