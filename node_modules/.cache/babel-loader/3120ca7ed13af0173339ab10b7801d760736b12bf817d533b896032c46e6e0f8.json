{"ast":null,"code":"const _excluded = [\"autocomplete\", \"dialCode\", \"name\", \"type\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { getErrors } from '@aws-amplify/ui';\nimport { PasswordField } from '../../../primitives/PasswordField/PasswordField.mjs';\nimport { PhoneNumberField } from '../../../primitives/PhoneNumberField/PhoneNumberField.mjs';\nimport { TextField } from '../../../primitives/TextField/TextField.mjs';\nimport { useAuthenticator } from '@aws-amplify/ui-react-core';\nimport { useStableId } from '../../../primitives/utils/useStableId.mjs';\nimport { ValidationErrors } from '../../shared/ValidationErrors.mjs';\nfunction FormField(_ref) {\n  let autoComplete = _ref.autocomplete,\n    dialCode = _ref.dialCode,\n    name = _ref.name,\n    type = _ref.type,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const _useAuthenticator = useAuthenticator(_ref2 => {\n      let validationErrors = _ref2.validationErrors;\n      return [validationErrors];\n    }),\n    validationErrors = _useAuthenticator.validationErrors;\n  const errors = React.useMemo(() => getErrors(validationErrors[name]), [name, validationErrors]);\n  const hasError = errors?.length > 0;\n  const errorId = useStableId();\n  const ariaDescribedBy = hasError ? errorId : undefined;\n  if (type === 'tel') {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PhoneNumberField, _objectSpread(_objectSpread({}, props), {}, {\n      name: name,\n      defaultDialCode: dialCode,\n      dialCodeName: \"country_code\",\n      autoComplete: autoComplete,\n      hasError: hasError,\n      \"aria-describedby\": ariaDescribedBy\n    })), /*#__PURE__*/React.createElement(ValidationErrors, {\n      dataAttr: \"data-amplify-sign-up-errors\",\n      errors: errors,\n      id: errorId\n    }));\n  } else if (type === 'password') {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PasswordField, _objectSpread(_objectSpread({}, props), {}, {\n      name: name,\n      autoCapitalize: \"off\",\n      autoComplete: autoComplete,\n      hasError: hasError,\n      \"aria-describedby\": ariaDescribedBy\n    })), /*#__PURE__*/React.createElement(ValidationErrors, {\n      dataAttr: \"data-amplify-sign-up-errors\",\n      errors: errors,\n      id: errorId\n    }));\n  } else {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TextField, _objectSpread(_objectSpread({}, props), {}, {\n      name: name,\n      autoCapitalize: \"off\",\n      autoComplete: autoComplete,\n      hasError: hasError,\n      type: type,\n      \"aria-describedby\": ariaDescribedBy\n    })), /*#__PURE__*/React.createElement(ValidationErrors, {\n      dataAttr: \"data-amplify-sign-up-errors\",\n      errors: errors,\n      id: errorId\n    }));\n  }\n}\nexport { FormField };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}