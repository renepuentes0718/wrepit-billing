{"ast":null,"code":"function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport * as $2AODx$react from \"react\";\nimport { useLayoutEffect as $2AODx$useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nconst $1746a345f3d73bb7$var$useReactId = $2AODx$react['useId'.toString()] || (() => undefined);\nlet $1746a345f3d73bb7$var$count = 0;\nfunction $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {\n  const _$2AODx$react$useStat = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId()),\n    _$2AODx$react$useStat2 = _slicedToArray(_$2AODx$react$useStat, 2),\n    id = _$2AODx$react$useStat2[0],\n    setId = _$2AODx$react$useStat2[1]; // React versions older than 18 will have client-side ids only.\n  $2AODx$useLayoutEffect(() => {\n    if (!deterministicId) setId(reactId => reactId !== null && reactId !== void 0 ? reactId : String($1746a345f3d73bb7$var$count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : '');\n}\nexport { $1746a345f3d73bb7$export$f680877a34711e37 as useId };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}