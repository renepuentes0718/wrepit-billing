{"ast":null,"code":"const _excluded = [\"ariaValuetext\", \"className\", \"defaultValue\", \"descriptiveText\", \"emptyTrackColor\", \"errorMessage\", \"filledTrackColor\", \"formatValue\", \"hasError\", \"id\", \"isDisabled\", \"isValueHidden\", \"label\", \"labelHidden\", \"onChange\", \"orientation\", \"outerEndComponent\", \"outerStartComponent\", \"testId\", \"thumbColor\", \"trackSize\", \"value\", \"size\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport { sanitizeNamespaceImport, isFunction, classNames, ComponentClassName, classNameModifier, classNameModifierByFlag } from '@aws-amplify/ui';\nimport * as RadixSlider from '@radix-ui/react-slider';\nimport * as React from 'react';\nimport '../Field/FieldClearButton.mjs';\nimport { FieldDescription } from '../Field/FieldDescription.mjs';\nimport { FieldErrorMessage } from '../Field/FieldErrorMessage.mjs';\nimport '../Field/Field.mjs';\nimport { FieldGroup } from '../FieldGroup/FieldGroup.mjs';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { Label } from '../Label/Label.mjs';\nimport { splitPrimitiveProps } from '../utils/splitPrimitiveProps.mjs';\nimport { View } from '../View/View.mjs';\nimport { useStableId } from '../utils/useStableId.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n\n// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\nconst _sanitizeNamespaceImp = sanitizeNamespaceImport(RadixSlider),\n  Range = _sanitizeNamespaceImp.Range,\n  Root = _sanitizeNamespaceImp.Root,\n  Thumb = _sanitizeNamespaceImp.Thumb,\n  Track = _sanitizeNamespaceImp.Track;\nconst SLIDER_LABEL_TEST_ID = 'slider-label';\nconst SLIDER_ROOT_TEST_ID = 'slider-root';\nconst SLIDER_TRACK_TEST_ID = 'slider-track';\nconst SLIDER_RANGE_TEST_ID = 'slider-range';\nconst SliderFieldPrimitive = (_ref, ref) => {\n  let ariaValuetext = _ref.ariaValuetext,\n    className = _ref.className,\n    _ref$defaultValue = _ref.defaultValue,\n    defaultValue = _ref$defaultValue === void 0 ? 0 : _ref$defaultValue,\n    descriptiveText = _ref.descriptiveText,\n    emptyTrackColor = _ref.emptyTrackColor,\n    errorMessage = _ref.errorMessage,\n    filledTrackColor = _ref.filledTrackColor,\n    formatValue = _ref.formatValue,\n    _ref$hasError = _ref.hasError,\n    hasError = _ref$hasError === void 0 ? false : _ref$hasError,\n    id = _ref.id,\n    isDisabled = _ref.isDisabled,\n    _ref$isValueHidden = _ref.isValueHidden,\n    isValueHidden = _ref$isValueHidden === void 0 ? false : _ref$isValueHidden,\n    label = _ref.label,\n    _ref$labelHidden = _ref.labelHidden,\n    labelHidden = _ref$labelHidden === void 0 ? false : _ref$labelHidden,\n    onChange = _ref.onChange,\n    _ref$orientation = _ref.orientation,\n    orientation = _ref$orientation === void 0 ? 'horizontal' : _ref$orientation,\n    outerEndComponent = _ref.outerEndComponent,\n    outerStartComponent = _ref.outerStartComponent,\n    testId = _ref.testId,\n    thumbColor = _ref.thumbColor,\n    trackSize = _ref.trackSize,\n    value = _ref.value,\n    size = _ref.size,\n    _rest = _objectWithoutProperties(_ref, _excluded);\n  const _useFieldset = useFieldset(),\n    isFieldsetDisabled = _useFieldset.isFieldsetDisabled;\n  const fieldId = useStableId(id);\n  const labelId = useStableId();\n  const descriptionId = useStableId();\n  const ariaDescribedBy = descriptiveText ? descriptionId : undefined;\n  const disabled = isFieldsetDisabled ? isFieldsetDisabled : isDisabled;\n  const _splitPrimitiveProps = splitPrimitiveProps(_rest),\n    styleProps = _splitPrimitiveProps.styleProps,\n    rest = _splitPrimitiveProps.rest;\n  const isControlled = value !== undefined;\n  const _React$useState = React.useState(isControlled ? value : defaultValue),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentValue = _React$useState2[0],\n    setCurrentValue = _React$useState2[1];\n  const values = isControlled ? [value] : undefined;\n  const defaultValues = !isControlled ? [defaultValue] : undefined;\n  const onValueChange = React.useCallback(value => {\n    setCurrentValue(value[0]);\n    if (isFunction(onChange)) {\n      // Do not have multiple thumbs support yet\n      onChange(value[0]);\n    }\n  }, [onChange]);\n  const renderedValue = React.useMemo(() => {\n    const formattedValue = isFunction(formatValue) ? formatValue(currentValue) : currentValue;\n    return typeof formatValue === 'string' ? ( /*#__PURE__*/React.createElement(View, {\n      as: \"span\"\n    }, formattedValue)) : formattedValue;\n  }, [currentValue, formatValue]);\n  const isVertical = orientation === 'vertical';\n  const componentClasses = classNames(ComponentClassName.SliderFieldTrack, classNameModifier(ComponentClassName.SliderFieldTrack, orientation), classNameModifier(ComponentClassName.SliderFieldTrack, size));\n  const rootComponentClasses = classNames(ComponentClassName.SliderFieldRoot, classNameModifier(ComponentClassName.SliderFieldRoot, orientation), classNameModifier(ComponentClassName.SliderFieldRoot, size), classNameModifierByFlag(ComponentClassName.SliderFieldRoot, 'disabled', disabled), className);\n  return /*#__PURE__*/React.createElement(Flex\n  // Custom classnames will be added to Root below\n  , _objectSpread({\n    // Custom classnames will be added to Root below\n    className: classNames(ComponentClassName.Field, classNameModifier(ComponentClassName.Field, size), ComponentClassName.SliderField),\n    testId: testId\n  }, styleProps), /*#__PURE__*/React.createElement(Label, {\n    className: ComponentClassName.SliderFieldLabel,\n    id: labelId,\n    testId: SLIDER_LABEL_TEST_ID,\n    visuallyHidden: labelHidden\n  }, /*#__PURE__*/React.createElement(View, {\n    as: \"span\"\n  }, label), !isValueHidden ? renderedValue : null), /*#__PURE__*/React.createElement(FieldDescription, {\n    id: descriptionId,\n    labelHidden: labelHidden,\n    descriptiveText: descriptiveText\n  }), /*#__PURE__*/React.createElement(FieldGroup, {\n    className: ComponentClassName.SliderFieldGroup,\n    id: fieldId,\n    orientation: orientation,\n    outerStartComponent: outerStartComponent,\n    outerEndComponent: outerEndComponent\n  }, /*#__PURE__*/React.createElement(Root, _objectSpread({\n    className: rootComponentClasses,\n    \"data-testid\": SLIDER_ROOT_TEST_ID,\n    disabled: disabled,\n    defaultValue: defaultValues,\n    onValueChange: onValueChange,\n    orientation: orientation,\n    ref: ref,\n    value: values\n  }, rest), /*#__PURE__*/React.createElement(Track, {\n    className: componentClasses,\n    \"data-testid\": SLIDER_TRACK_TEST_ID,\n    style: {\n      backgroundColor: String(emptyTrackColor),\n      [`${isVertical ? 'width' : 'height'}`]: trackSize\n    }\n  }, /*#__PURE__*/React.createElement(Range, {\n    className: classNames(ComponentClassName.SliderFieldRange, classNameModifier(ComponentClassName.SliderFieldRange, orientation), classNameModifierByFlag(ComponentClassName.SliderFieldRange, 'disabled', disabled)),\n    \"data-testid\": SLIDER_RANGE_TEST_ID,\n    style: {\n      backgroundColor: String(filledTrackColor)\n    }\n  })), /*#__PURE__*/React.createElement(Thumb, {\n    \"aria-describedby\": ariaDescribedBy,\n    \"aria-labelledby\": labelId,\n    \"aria-valuetext\": ariaValuetext,\n    className: classNames(ComponentClassName.SliderFieldThumb, classNameModifier(ComponentClassName.SliderFieldThumb, size), classNameModifierByFlag(ComponentClassName.SliderFieldThumb, 'disabled', disabled)),\n    style: {\n      backgroundColor: String(thumbColor)\n    }\n  }))), /*#__PURE__*/React.createElement(FieldErrorMessage, {\n    hasError: hasError,\n    errorMessage: errorMessage\n  }));\n};\n/**\n * [📖 Docs](https://ui.docs.amplify.aws/react/components/sliderfield)\n */\nconst SliderField = primitiveWithForwardRef(SliderFieldPrimitive);\nSliderField.displayName = 'SliderField';\nexport { SLIDER_LABEL_TEST_ID, SLIDER_RANGE_TEST_ID, SLIDER_ROOT_TEST_ID, SLIDER_TRACK_TEST_ID, SliderField };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}