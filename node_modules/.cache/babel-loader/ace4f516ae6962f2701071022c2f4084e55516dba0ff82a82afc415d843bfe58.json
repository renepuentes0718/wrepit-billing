{"ast":null,"code":"function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport * as React from 'react';\nimport { isFunction } from '@aws-amplify/ui';\nimport { useSetUserAgent, AuthenticatorProvider, useAuthenticator, useAuthenticatorInitMachine } from '@aws-amplify/ui-react-core';\nimport { VERSION } from '../../version.mjs';\nimport { useDeprecationWarning } from '../../hooks/useDeprecationWarning.mjs';\nimport { CustomComponentsContext } from './hooks/useCustomComponents/useCustomComponents.mjs';\nimport '../../primitives/View/View.mjs';\nimport { Router } from './Router/Router.mjs';\nimport { SetupTotp } from './SetupTotp/SetupTotp.mjs';\nimport { SignIn } from './SignIn/SignIn.mjs';\nimport { SignUp } from './SignUp/SignUp.mjs';\nimport { ForceNewPassword } from './ForceNewPassword/ForceNewPassword.mjs';\nimport './ForgotPassword/ConfirmResetPassword.mjs';\nimport { ForgotPassword } from './ForgotPassword/ForgotPassword.mjs';\nimport { defaultComponents } from './hooks/useCustomComponents/defaultComponents.mjs';\n\n// `AuthenticatorInternal` exists to give access to the context returned via `useAuthenticator`,\n// which allows the `Authenticator` to just return `children` if a user is authenticated.\n// Once the `Provider` is removed from the `Authenticator` component and exported as\n// `AuthenticatorProvider`, this component should be renamed to `Authenticator`.\nfunction AuthenticatorInternal(_ref) {\n  let children = _ref.children,\n    className = _ref.className,\n    customComponents = _ref.components,\n    formFields = _ref.formFields,\n    hideSignUp = _ref.hideSignUp,\n    initialState = _ref.initialState,\n    loginMechanisms = _ref.loginMechanisms,\n    passwordSettings = _ref.passwordSettings,\n    signUpAttributes = _ref.signUpAttributes,\n    services = _ref.services,\n    socialProviders = _ref.socialProviders,\n    variation = _ref.variation;\n  useDeprecationWarning({\n    message: 'The `passwordSettings` prop has been deprecated and will be removed in a future major version of Amplify UI.',\n    // shouldWarn: !!passwordSettings,\n    /**\n     * @migration turn off until getConfig returns zero config\n     */\n    shouldWarn: false\n  });\n  const _useAuthenticator = useAuthenticator(_ref2 => {\n      let route = _ref2.route,\n        signOut = _ref2.signOut,\n        user = _ref2.user;\n      return [route, signOut, user];\n    }),\n    route = _useAuthenticator.route,\n    signOut = _useAuthenticator.signOut,\n    user = _useAuthenticator.user;\n  useAuthenticatorInitMachine({\n    initialState,\n    loginMechanisms,\n    passwordSettings,\n    services,\n    signUpAttributes,\n    socialProviders,\n    formFields\n  });\n  const value = React.useMemo(() => ({\n    components: _objectSpread(_objectSpread({}, defaultComponents), customComponents)\n  }), [customComponents]);\n  const isAuthenticatedRoute = route === 'authenticated' || route === 'signOut';\n  if (isAuthenticatedRoute) {\n    // `Authenticator` might not have user defined `children` for non SPA use cases.\n    if (!children) {\n      // @ts-ignore\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(React.Fragment, null, isFunction(children) ? children({\n      signOut,\n      user\n    }) // children is a render prop\n    : children);\n  }\n  return /*#__PURE__*/React.createElement(CustomComponentsContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React.createElement(Router, {\n    className: className,\n    hideSignUp: hideSignUp,\n    variation: variation\n  }));\n}\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/connected-components/authenticator)\n */\nfunction Authenticator(props) {\n  useSetUserAgent({\n    componentName: 'Authenticator',\n    packageName: 'react',\n    version: VERSION\n  });\n  return /*#__PURE__*/React.createElement(AuthenticatorProvider, null, /*#__PURE__*/React.createElement(AuthenticatorInternal, _objectSpread({}, props)));\n}\nAuthenticator.Provider = AuthenticatorProvider;\nAuthenticator.ForgotPassword = ForgotPassword;\nAuthenticator.SetupTotp = SetupTotp;\nAuthenticator.SignIn = SignIn;\nAuthenticator.SignUp = SignUp;\nAuthenticator.ForceNewPassword = ForceNewPassword;\nexport { Authenticator, AuthenticatorInternal };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}