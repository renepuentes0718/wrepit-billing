{"ast":null,"code":"const _excluded = [\"children\", \"className\", \"id\", \"isDisabled\", \"testId\", \"value\", \"labelPosition\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { classNames, ComponentClassName, classNameModifierByFlag, classNameModifier } from '@aws-amplify/ui';\nimport { Flex } from '../Flex/Flex.mjs';\nimport { Input } from '../Input/Input.mjs';\nimport { Text } from '../Text/Text.mjs';\nimport { useRadioGroupContext } from '../RadioGroupField/context.mjs';\nimport { useFieldset } from '../Fieldset/useFieldset.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\nconst RadioPrimitive = (_ref, ref) => {\n  let children = _ref.children,\n    className = _ref.className,\n    id = _ref.id,\n    _ref$isDisabled = _ref.isDisabled,\n    isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n    testId = _ref.testId,\n    value = _ref.value,\n    radioLabelPosition = _ref.labelPosition,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const _useRadioGroupContext = useRadioGroupContext(),\n    currentValue = _useRadioGroupContext.currentValue,\n    defaultValue = _useRadioGroupContext.defaultValue,\n    name = _useRadioGroupContext.name,\n    hasError = _useRadioGroupContext.hasError,\n    _useRadioGroupContext2 = _useRadioGroupContext.isGroupDisabled,\n    isGroupDisabled = _useRadioGroupContext2 === void 0 ? false : _useRadioGroupContext2,\n    isRequired = _useRadioGroupContext.isRequired,\n    isReadOnly = _useRadioGroupContext.isReadOnly,\n    onChange = _useRadioGroupContext.onChange,\n    size = _useRadioGroupContext.size,\n    groupLabelPosition = _useRadioGroupContext.labelPosition;\n  const _useFieldset = useFieldset(),\n    isFieldsetDisabled = _useFieldset.isFieldsetDisabled;\n  const shouldBeDisabled = isFieldsetDisabled ? isFieldsetDisabled : isGroupDisabled || isDisabled || isReadOnly && defaultValue !== value;\n  // for controlled component\n  const checked = currentValue !== undefined ? value === currentValue : undefined;\n  // for uncontrolled component\n  const defaultChecked = defaultValue !== undefined ? value === defaultValue : undefined;\n  const labelPosition = radioLabelPosition ? radioLabelPosition : groupLabelPosition;\n  return /*#__PURE__*/React.createElement(Flex, {\n    as: \"label\",\n    className: classNames(ComponentClassName.Radio, classNameModifierByFlag(ComponentClassName.Radio, `disabled`, shouldBeDisabled), labelPosition ? `amplify-label-${labelPosition}` : null, className)\n  }, children && ( /*#__PURE__*/React.createElement(Text, {\n    as: \"span\",\n    className: classNames(ComponentClassName.RadioLabel, classNameModifierByFlag(ComponentClassName.RadioLabel, `disabled`, shouldBeDisabled))\n  }, children)), /*#__PURE__*/React.createElement(Input, _objectSpread({\n    checked: checked,\n    className: classNames(ComponentClassName.VisuallyHidden, ComponentClassName.RadioInput),\n    defaultChecked: defaultChecked,\n    hasError: hasError,\n    id: id,\n    isDisabled: shouldBeDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    onChange: onChange,\n    ref: ref,\n    type: \"radio\",\n    name: name,\n    value: value\n  }, rest)), /*#__PURE__*/React.createElement(Flex, {\n    \"aria-hidden\": \"true\",\n    as: \"span\",\n    className: classNames(ComponentClassName.RadioButton, classNameModifier(ComponentClassName.RadioButton, size)),\n    testId: testId\n  }));\n};\nconst Radio = primitiveWithForwardRef(RadioPrimitive);\nRadio.displayName = 'Radio';\nexport { Radio, RadioPrimitive };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}