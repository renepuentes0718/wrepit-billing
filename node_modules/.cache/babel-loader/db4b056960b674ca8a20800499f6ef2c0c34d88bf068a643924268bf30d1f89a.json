{"ast":null,"code":"const _excluded = [\"menuAlign\", \"children\", \"className\", \"isOpen\", \"size\", \"trigger\", \"triggerClassName\", \"ariaLabel\", \"onOpenChange\", \"isDisabled\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } } return target; }\nimport * as React from 'react';\nimport { sanitizeNamespaceImport, classNames, ComponentClassName } from '@aws-amplify/ui';\nimport * as Dropdown from '@radix-ui/react-dropdown-menu';\nimport { ButtonGroup } from '../ButtonGroup/ButtonGroup.mjs';\nimport '../Icon/Icon.mjs';\nimport '../Icon/context/IconsContext.mjs';\nimport { useIcons } from '../Icon/context/useIcons.mjs';\nimport '../View/View.mjs';\nimport { IconMenu } from '../Icon/icons/IconMenu.mjs';\nimport { MenuButton } from './MenuButton.mjs';\nimport { primitiveWithForwardRef } from '../utils/primitiveWithForwardRef.mjs';\n\n// Radix packages don't support ESM in Node, in some scenarios(e.g. SSR)\n// We have to use namespace import and sanitize it to ensure the interoperablity between ESM and CJS\nconst _sanitizeNamespaceImp = sanitizeNamespaceImport(Dropdown),\n  DropdownMenu = _sanitizeNamespaceImp.DropdownMenu,\n  DropdownMenuTrigger = _sanitizeNamespaceImp.DropdownMenuTrigger,\n  DropdownMenuContent = _sanitizeNamespaceImp.DropdownMenuContent;\nconst MENU_TRIGGER_TEST_ID = 'amplify-menu-trigger-test-id';\nconst MENU_ITEMS_GROUP_TEST_ID = 'amplify-menu-items-group-test-id';\nconst MenuPrimitive = (_ref, ref) => {\n  let _ref$menuAlign = _ref.menuAlign,\n    menuAlign = _ref$menuAlign === void 0 ? 'start' : _ref$menuAlign,\n    children = _ref.children,\n    className = _ref.className,\n    isOpen = _ref.isOpen,\n    size = _ref.size,\n    trigger = _ref.trigger,\n    triggerClassName = _ref.triggerClassName,\n    ariaLabel = _ref.ariaLabel,\n    onOpenChange = _ref.onOpenChange,\n    isDisabled = _ref.isDisabled,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  const icons = useIcons('menu');\n  return /*#__PURE__*/React.createElement(DropdownMenu, {\n    onOpenChange: onOpenChange,\n    open: isOpen\n  }, /*#__PURE__*/React.createElement(DropdownMenuTrigger, {\n    disabled: isDisabled,\n    asChild: true\n  }, trigger ?? ( /*#__PURE__*/React.createElement(MenuButton, {\n    ariaLabel: ariaLabel,\n    size: size,\n    testId: MENU_TRIGGER_TEST_ID,\n    className: classNames(ComponentClassName.MenuTrigger, triggerClassName)\n  }, icons?.menu ?? /*#__PURE__*/React.createElement(IconMenu, null)))), /*#__PURE__*/React.createElement(DropdownMenuContent, {\n    align: menuAlign,\n    className: ComponentClassName.MenuWrapper\n  }, /*#__PURE__*/React.createElement(ButtonGroup, _objectSpread({\n    className: classNames(ComponentClassName.MenuContent, className),\n    ref: ref,\n    isDisabled: isDisabled,\n    size: size,\n    testId: MENU_ITEMS_GROUP_TEST_ID\n  }, rest), children)));\n};\n/**\n * [ðŸ“– Docs](https://ui.docs.amplify.aws/react/components/menu)\n */\nconst Menu = primitiveWithForwardRef(MenuPrimitive);\nMenu.displayName = 'Menu';\nexport { MENU_ITEMS_GROUP_TEST_ID, MENU_TRIGGER_TEST_ID, Menu };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}