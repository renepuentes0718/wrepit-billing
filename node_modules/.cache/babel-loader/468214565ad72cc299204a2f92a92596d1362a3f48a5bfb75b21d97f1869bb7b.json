{"ast":null,"code":"import * as React from 'react';\nimport { isFunction, isString } from '@aws-amplify/ui';\nconst useToggleButtonGroup = _ref => {\n  let onChange = _ref.onChange,\n    value = _ref.value,\n    _ref$isExclusive = _ref.isExclusive,\n    isExclusive = _ref$isExclusive === void 0 ? false : _ref$isExclusive,\n    _ref$isSelectionRequi = _ref.isSelectionRequired,\n    isSelectionRequired = _ref$isSelectionRequi === void 0 ? false : _ref$isSelectionRequi;\n  // Multiple selection\n  const handleChange = React.useCallback(buttonValue => {\n    if (!isFunction(onChange) || !Array.isArray(value)) {\n      return;\n    }\n    const index = isString(buttonValue) ? value.indexOf(buttonValue) : -1;\n    let newValue;\n    const shouldToggleOff = index >= 0;\n    if (shouldToggleOff) {\n      // Toggle off\n      newValue = [...value];\n      if (!isSelectionRequired || newValue.length > 1) {\n        newValue.splice(index, 1);\n      }\n    } else {\n      // Toggle on\n      newValue = [...value, buttonValue];\n    }\n    onChange(newValue);\n  }, [onChange, value, isSelectionRequired]);\n  // Exclusive selection\n  const handleExclusiveChange = React.useCallback(buttonValue => {\n    if (!isFunction(onChange)) {\n      return;\n    }\n    onChange(value === buttonValue && !isSelectionRequired ? undefined : buttonValue);\n  }, [onChange, value, isSelectionRequired]);\n  return isExclusive ? handleExclusiveChange : handleChange;\n};\nexport { useToggleButtonGroup };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}